<b:List x:Class="WBZ.Modules.Logs.LogsList"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sec="clr-namespace:StswExpress.Controls;assembly=StswExpress"
        xmlns:seg="clr-namespace:StswExpress.Globals;assembly=StswExpress"
        xmlns:b="clr-namespace:WBZ.Modules.Logs"
        xmlns:c="clr-namespace:WBZ.Controls"
        xmlns:p="clr-namespace:WBZ.Properties"
        mc:Ignorable="d" Height="650" Width="975" ResizeMode="CanResize" WindowStartupLocation="CenterScreen"
        Title="{Binding Title}" Icon="/Resources/icon32_logs.ico"
        Loaded="Window_Loaded" Closed="Window_Closed"
        FocusManager.FocusedElement="{Binding RelativeSource={x:Static RelativeSource.Self}, Mode=OneTime}">
    <WindowChrome.WindowChrome>
        <WindowChrome GlassFrameThickness="0,0,0,1" CornerRadius="0"/>
    </WindowChrome.WindowChrome>
    <Window.CommandBindings>
        <CommandBinding Command="seg:Commands.Clear" Executed="cmdClear_Executed"/>
        <CommandBinding Command="seg:Commands.Close" Executed="cmdClose_Executed"/>
        <CommandBinding Command="seg:Commands.Duplicate" Executed="cmdDuplicate_Executed" CanExecute="cmdDuplicate_CanExecute"/>
        <CommandBinding Command="seg:Commands.Edit" Executed="cmdEdit_Executed" CanExecute="cmdEdit_CanExecute"/>
        <CommandBinding Command="seg:Commands.Help" Executed="cmdHelp_Executed"/>
        <CommandBinding Command="seg:Commands.Preview" Executed="cmdPreview_Executed" CanExecute="cmdPreview_CanExecute"/>
        <CommandBinding Command="seg:Commands.Refresh" Executed="cmdRefresh_Executed"/>
    </Window.CommandBindings>
    <DockPanel>
        <!-- titleBar -->
        <sec:TitleBar DockPanel.Dock="Top" SubIcon="{Binding ModeIcon}"/>
        <!-- buttonsPanel -->
        <Border DockPanel.Dock="Right"
                Background="{Binding config_Logs_PanelColor, Source={x:Static p:Settings.Default}}"
                BorderBrush="{Binding config_Logs_PanelColor, Source={x:Static p:Settings.Default}, Converter={seg:conv_Color}, ConverterParameter=-0.5}"
                BorderThickness="1,0,0,0">
            <DockPanel>
                <StackPanel DockPanel.Dock="Top">
                    <sec:IconButton Margin="5"  Text="Podgląd&#10;obiektu"
                                    IsTextVisible="{Binding config_ShowButtonWithText, Source={x:Static p:Settings.Default}}"
                                    Icon="/Resources/icon32_search.ico"
                                    Command="seg:Commands.Preview"/>
                    <sec:IconButton Margin="5" Text="Edycja&#10;obiektu"
                                    IsTextVisible="{Binding config_ShowButtonWithText, Source={x:Static p:Settings.Default}}"
                                    Icon="/Resources/icon32_edit.ico"
                                    Command="seg:Commands.Edit"/>
                    <Separator/>
                    <CheckBox x:Name="chckEnabled"
                              Margin="5" Content="Logi włączone"
                              Visibility="{Binding config_ShowButtonWithText, Source={x:Static p:Settings.Default}, Converter={seg:conv_Bool}}"
                              Checked="chckEnabled_Checked" Unchecked="chckEnabled_Checked"/>
                    <Separator Visibility="{Binding config_ShowButtonWithText, Source={x:Static p:Settings.Default}, Converter={seg:conv_Bool}}"/>
                    <sec:IconButton Margin="5" Text="Usuń"
                                    IsTextVisible="{Binding config_ShowButtonWithText, Source={x:Static p:Settings.Default}}"
                                    Icon="/Resources/icon32_delete.ico"
                                    Command="seg:Commands.Delete"/>
                    <Separator/>
                </StackPanel>
                <StackPanel DockPanel.Dock="Bottom" VerticalAlignment="Bottom">
                    <Separator/>
                    <sec:IconButton Text="{Tr Refresh}" Margin="5"
                                    IsTextVisible="{Binding config_ShowButtonWithText, Source={x:Static p:Settings.Default}}"
                                    Icon="/Resources/icon32_refresh.ico"
                                    Command="seg:Commands.Refresh"/>
                    <Separator/>
                    <sec:IconButton Text="{Tr CloseWindow}" Margin="5"
                                    IsTextVisible="{Binding config_ShowButtonWithText, Source={x:Static p:Settings.Default}}"
                                    Icon="/Resources/icon32_close.ico"
                                    Command="seg:Commands.Close"/>
                </StackPanel>
            </DockPanel>
            <Border.ContextMenu>
                <ContextMenu>
                    <sec:ColorSetter Color="{Binding config_Logs_PanelColor, Source={x:Static p:Settings.Default}, Mode=TwoWay}"/>
                </ContextMenu>
            </Border.ContextMenu>
        </Border>
        <!-- statusPanel -->
        <c:StatusPanel DockPanel.Dock="Bottom" Background="{Binding config_Logs_PanelColor, Source={x:Static p:Settings.Default}}"
                       HasFilters="{Binding AreFiltersVisible, Mode=OneTime}" HasGroups="False"/>
        <!-- dataGrid -->
        <TabControl Padding="0" SelectedIndex="{Binding SelectedTab}" SelectionChanged="tcList_SelectionChanged">
            <!-- logs -->
            <TabItem>
                <TabItem.Header>
                    <sec:Header Text="Logi" Icon="/Resources/icon32_shield_blue.ico"/>
                </TabItem.Header>
                <b:LogsListGrid x:Name="dgList_Logs" ItemsSource="{Binding InstancesList, Mode=OneWay}" IsReadOnly="True"
                                MouseDoubleClick="dgList_MouseDoubleClick" ScrollViewer.ScrollChanged="dgList_ScrollChanged"/>
            </TabItem>
            <!-- errors -->
            <TabItem>
                <TabItem.Header>
                    <sec:Header Text="Błędy" Icon="/Resources/icon32_shield_red.ico"/>
                </TabItem.Header>
                <b:LogsListGrid x:Name="dgList_Errors" ItemsSource="{Binding InstancesList, Mode=OneWay}" IsReadOnly="True"
                                MouseDoubleClick="dgList_MouseDoubleClick" ScrollViewer.ScrollChanged="dgList_ScrollChanged"/>
            </TabItem>
        </TabControl>
    </DockPanel>
</b:List>
