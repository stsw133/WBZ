<DataGrid x:Class="WBZ.Modules.Logs.LogsListGrid"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
          xmlns:sec="clr-namespace:StswExpress.Controls;assembly=StswExpress"
          xmlns:seg="clr-namespace:StswExpress.Globals;assembly=StswExpress"
          xmlns:g="clr-namespace:WBZ.Globals"
          xmlns:p="clr-namespace:WBZ.Properties"
          mc:Ignorable="d" d:DesignHeight="450" d:DesignWidth="800"
          Margin="5" HorizontalGridLinesBrush="LightGray" VerticalGridLinesBrush="LightGray" BorderThickness="1" AutoGenerateColumns="False">
    <DataGrid.ColumnHeaderStyle>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Background" Value="{Binding config_Logs_PanelColor, Source={x:Static p:Settings.Default}}"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="BorderBrush" Value="{Binding config_Logs_PanelColor, Source={x:Static p:Settings.Default}, Converter={seg:conv_Color}, ConverterParameter=-0.25}"/>
            <Setter Property="Padding" Value="4 3"/>
        </Style>
    </DataGrid.ColumnHeaderStyle>
    <DataGrid.Resources>
        <g:BindingProxy x:Key="proxy" Data="{Binding}"/>
    </DataGrid.Resources>
    <DataGrid.Columns>
        <!-- ID -->
        <DataGridTextColumn Binding="{Binding ID}" Header="ID"
                            Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_ID, Converter={seg:conv_BoolToVisibility}}"/>
        <!-- User -->
        <DataGridTextColumn Binding="{Binding cUser.Value}" Width="*"
                            Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_User, Converter={seg:conv_BoolToVisibility}}">
            <DataGridTextColumn.Header>
                <sec:ColumnFilter_Text Header="Użytkownik"
                                       Value="{Binding Data.Filters.cUser.Value, Mode=TwoWay, Source={StaticResource proxy}, UpdateSourceTrigger=PropertyChanged}"
                                       IsFilterVisible="{Binding Data.AreFiltersVisible, Source={StaticResource proxy}}"/>
            </DataGridTextColumn.Header>
        </DataGridTextColumn>
        <!-- Module -->
        <DataGridTextColumn Binding="{Binding TranslatedModule}" Width="*"
                            Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_Module, Converter={seg:conv_BoolToVisibility}}">
            <DataGridTextColumn.Header>
                <StackPanel>
                    <TextBlock Text="Nazwa modułu"/>
                    <ComboBox VerticalContentAlignment="Center" Padding="1"
                              ItemsSource="{x:Static g:Config.ListModules}" SelectedValuePath="Item1" DisplayMemberPath="Item2"
                              SelectedValue="{Binding Data.Filters.Module, Mode=TwoWay, Source={StaticResource proxy}, UpdateSourceTrigger=PropertyChanged}"
                              Visibility="{Binding Data.AreFiltersVisible, Source={StaticResource proxy}, Converter={seg:conv_BoolToVisibility}}">
                        <ComboBox.InputBindings>
                            <KeyBinding Command="seg:Commands.Refresh" Key="Return"/>
                        </ComboBox.InputBindings>
                    </ComboBox>
                </StackPanel>
            </DataGridTextColumn.Header>
        </DataGridTextColumn>
        <!-- Instance -->
        <DataGridTextColumn Binding="{Binding Instance}" Header="ID instancji" Width="*"
                            Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_Obj, Converter={seg:conv_BoolToVisibility}}"/>
        <!-- Content -->
        <DataGridTextColumn Binding="{Binding Content}" Width="*"
                            Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_Content, Converter={seg:conv_BoolToVisibility}}">
            <DataGridTextColumn.Header>
                <sec:ColumnFilter_Text Header="Treść"
                                       Value="{Binding Data.Filters.Content, Mode=TwoWay, Source={StaticResource proxy}, UpdateSourceTrigger=PropertyChanged}"
                                       IsFilterVisible="{Binding Data.AreFiltersVisible, Source={StaticResource proxy}}"/>
            </DataGridTextColumn.Header>
        </DataGridTextColumn>
        <!-- DateTime -->
        <DataGridTextColumn Binding="{Binding DateTime, StringFormat={}{0:yyyy-MM-dd}}" Width="*"
                            Visibility="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_DateTime, Converter={seg:conv_BoolToVisibility}}">
            <DataGridTextColumn.Header>
                <sec:ColumnFilter_Date Header="Data i czas"
                                       Value1="{Binding Data.Filters.fDateTime, Mode=TwoWay, Source={StaticResource proxy}, UpdateSourceTrigger=PropertyChanged}"
                                       Value2="{Binding Data.Filters.DateTime, Mode=TwoWay, Source={StaticResource proxy}, UpdateSourceTrigger=PropertyChanged}"
                                       IsFilterVisible="{Binding Data.AreFiltersVisible, Source={StaticResource proxy}}"/>
            </DataGridTextColumn.Header>
        </DataGridTextColumn>
    </DataGrid.Columns>
    <DataGrid.ContextMenu>
        <ContextMenu>
            <!-- Columns -->
            <MenuItem Header="Widoczność kolumn">
                <MenuItem.Icon>
                    <Image Source="/Resources/icon32_show.ico"/>
                </MenuItem.Icon>
                <MenuItem IsCheckable="True" Header="ID" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_ID, Mode=TwoWay}"/>
                <MenuItem IsCheckable="True" Header="Użytkownik" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_User, Mode=TwoWay}"/>
                <MenuItem IsCheckable="True" Header="Nazwa modułu" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_Module, Mode=TwoWay}"/>
                <MenuItem IsCheckable="True" Header="ID obiektu" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_Obj, Mode=TwoWay}"/>
                <MenuItem IsCheckable="True" Header="Treść" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_Content, Mode=TwoWay}"/>
                <MenuItem IsCheckable="True" Header="Data i czas" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=columns_LogsList_DateTime, Mode=TwoWay}"/>
                <Separator/>
            </MenuItem>
            <!-- Sorting -->
            <MenuItem Header="Sortowanie danych">
                <MenuItem.Icon>
                    <Image Source="/Resources/icon32_descending.ico"/>
                </MenuItem.Icon>
                <MenuItem>
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Sortowanie 1:"/>
                            <ToggleButton IsChecked="{Binding sorting_LogsList[1], Source={x:Static p:Settings.Default}, Mode=TwoWay}"
                                          Height="{Binding FontSize, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay, Converter={seg:conv_Size}, ConverterParameter=2.2}"
                                          Width="{Binding FontSize, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay, Converter={seg:conv_Size}, ConverterParameter=2.2}">
                                <Image Margin="{Binding FontSize, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay, Converter={seg:conv_Size}, ConverterParameter=0.1}"
                                       Source="/Resources/icon32_descending.ico"/>
                            </ToggleButton>
                            <ComboBox SelectedValue="{Binding sorting_LogsList[0], Source={x:Static p:Settings.Default}, Mode=TwoWay}"
                                      SelectedValuePath="Tag" VerticalContentAlignment="Center">
                                <ComboBoxItem Content="Nazwisko i imię" Tag="u.lastname || u.forename"/>
                                <ComboBoxItem Content="Moduł" Tag="l.module"/>
                                <ComboBoxItem Content="Treść" Tag="l.content"/>
                                <ComboBoxItem Content="Data" Tag="l.datetime"/>
                            </ComboBox>
                        </StackPanel>
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem>
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Sortowanie 2:"/>
                            <ToggleButton IsChecked="{Binding sorting_LogsList[3], Source={x:Static p:Settings.Default}, Mode=TwoWay}"
                                          Height="{Binding FontSize, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay, Converter={seg:conv_Size}, ConverterParameter=2.2}"
                                          Width="{Binding FontSize, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay, Converter={seg:conv_Size}, ConverterParameter=2.2}">
                                <Image Margin="{Binding FontSize, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay, Converter={seg:conv_Size}, ConverterParameter=0.1}"
                                       Source="/Resources/icon32_descending.ico"/>
                            </ToggleButton>
                            <ComboBox SelectedValue="{Binding sorting_LogsList[2], Source={x:Static p:Settings.Default}, Mode=TwoWay}"
                                      SelectedValuePath="Tag" VerticalContentAlignment="Center">
                                <ComboBoxItem Content="Nazwisko i imię" Tag="u.lastname || u.forename"/>
                                <ComboBoxItem Content="Moduł" Tag="l.module"/>
                                <ComboBoxItem Content="Treść" Tag="l.content"/>
                                <ComboBoxItem Content="Data" Tag="l.datetime"/>
                            </ComboBox>
                        </StackPanel>
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem>
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Limit wczytywania:"/>
                            <TextBox Text="{Binding sorting_LogsList[4], Source={x:Static p:Settings.Default}, Mode=TwoWay}"
                                     Width="{Binding FontSize, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay, Converter={seg:conv_Size}, ConverterParameter=5}"
                                     HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                        </StackPanel>
                    </MenuItem.Header>
                </MenuItem>
            </MenuItem>
            <!-- Actions -->
            <Separator/>
            <sec:MenuItem Header="Podgląd" IconUri="/Resources/icon32_search.ico" Command="seg:Commands.Preview"/>
            <sec:MenuItem Header="Dodaj" IconUri="/Resources/icon32_add.ico" Command="seg:Commands.New"/>
            <sec:MenuItem Header="Duplikuj" IconUri="/Resources/icon32_duplicate.ico" Command="seg:Commands.Duplicate"/>
            <sec:MenuItem Header="Edytuj" IconUri="/Resources/icon32_edit.ico" Command="seg:Commands.Edit"/>
            <sec:MenuItem Header="Usuń" IconUri="/Resources/icon32_delete.ico" Command="seg:Commands.Delete"/>
            <Separator/>
            <sec:MenuItem Header="Odśwież" IconUri="/Resources/icon32_refresh.ico" Command="seg:Commands.Refresh"/>
        </ContextMenu>
    </DataGrid.ContextMenu>
    <DataGrid.RowStyle>
        <Style TargetType="DataGridRow">
            <Style.Setters>
                <Setter Property="Background" Value="{Binding Module, Converter={seg:conv_GenerateColor}, ConverterParameter=0.75}"/>
            </Style.Setters>
        </Style>
    </DataGrid.RowStyle>
</DataGrid>
