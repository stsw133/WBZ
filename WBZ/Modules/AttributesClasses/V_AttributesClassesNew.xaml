<b:New x:Class="WBZ.Modules.AttributesClasses.AttributesClassesNew"
       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
       xmlns:se="clr-namespace:StswExpress;assembly=StswExpress"
       xmlns:b="clr-namespace:WBZ.Modules.AttributesClasses"
       xmlns:g="clr-namespace:WBZ.Globals"
       xmlns:m="clr-namespace:WBZ.Models"
       xmlns:p="clr-namespace:WBZ.Properties"
       xmlns:s="clr-namespace:WBZ.Modules._shared"
       mc:Ignorable="d" Height="600" Width="900" ResizeMode="CanResize" WindowStartupLocation="CenterScreen"
       Title="{Binding Title}" Icon="/Resources/icon32_attributes.ico"
       Loaded="Window_Loaded" Closed="Window_Closed"
       FocusManager.FocusedElement="{Binding RelativeSource={x:Static RelativeSource.Self}, Mode=OneTime}">
    <WindowChrome.WindowChrome>
        <WindowChrome GlassFrameThickness="0,0,0,1" CornerRadius="0"/>
    </WindowChrome.WindowChrome>
    <Window.CommandBindings>
		<CommandBinding Command="se:Commands.Close" Executed="cmdClose_Executed"/>
		<CommandBinding Command="se:Commands.Refresh" Executed="cmdRefresh_Executed"/>
        <CommandBinding Command="se:Commands.Save" Executed="cmdSave_Executed" CanExecute="cmdSave_CanExecute"/>
    </Window.CommandBindings>
    <DockPanel>
        <!-- titleBar -->
        <se:TitleBar DockPanel.Dock="Top" SubIcon="{Binding ModeIcon}"/>
        <!-- buttonsPanel -->
		<ScrollViewer DockPanel.Dock="Right" VerticalScrollBarVisibility="Auto">
			<Border BorderBrush="Gray" BorderThickness="1,0,0,0" Background="{Binding panelColor_AttributesClasses, Source={x:Static p:Settings.Default}}">
				<DockPanel>
					<DockPanel.Resources>
						<Style TargetType="{x:Type se:IconButton}">
							<Setter Property="HorizontalContentAlignment" Value="Left"/>
							<Setter Property="IsTextVisible" Value="{Binding config_ShowButtonsWithNames, Source={x:Static p:Settings.Default}}"/>
						</Style>
					</DockPanel.Resources>
					<StackPanel DockPanel.Dock="Top">
						<se:IconButton Text="{Tr Save}" Margin="5" Icon="/Resources/icon32_save.ico" Command="se:Commands.Save"/>
						<Separator/>
					</StackPanel>
					<StackPanel DockPanel.Dock="Bottom" VerticalAlignment="Bottom">
						<Separator/>
						<se:IconButton Text="{Tr Refresh}" Margin="5" Icon="/Resources/icon32_refresh.ico" Command="se:Commands.Refresh"/>
						<Separator/>
						<se:IconButton Text="{Tr CloseWindow}" Margin="5" Icon="/Resources/icon32_close.ico" Command="se:Commands.Close"/>
					</StackPanel>
				</DockPanel>
				<Border.ContextMenu>
					<ContextMenu>
						<se:ColorSetter Color="{Binding panelColor_AttributesClasses, Source={x:Static p:Settings.Default}, Mode=TwoWay}"/>
					</ContextMenu>
				</Border.ContextMenu>
			</Border>
		</ScrollViewer>
		<!-- tabs -->
        <TabControl DockPanel.Dock="Top">
            <!-- tabMain -->
            <TabItem>
                <TabItem.Header>
                    <se:Header Text="{Tr General}" Icon="{Binding Icon, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                </TabItem.Header>
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <Grid Margin="10" IsEnabled="{Binding Mode, Converter={se:conv_Compare}, ConverterParameter=!PREVIEW}">
                        <Grid.Resources>
                            <Style TargetType="{x:Type se:IconButton}">
                                <Setter Property="CornerRadius" Value="0"/>
                                <Setter Property="IconMargin" Value="0"/>
                                <Setter Property="IconSize" Value="{Binding iSize, Source={x:Static se:Settings.Default}, Converter={se:conv_Size}, ConverterParameter=1.5}"/>
                                <Setter Property="IsTextVisible" Value="False"/>
                                <Setter Property="Margin" Value="5,5,0,5"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"/>
                            </Style>
                            <Style TargetType="{x:Type se:ExtLabel}">
                                <Setter Property="HorizontalContentAlignment" Value="Right"/>
                                <Setter Property="Margin" Value="5"/>
                                <Setter Property="Width" Value="{Binding iSize, Source={x:Static se:Settings.Default}, Converter={se:conv_Size}, ConverterParameter=10}"/>
                            </Style>
                            <Style TargetType="{x:Type se:NumericUpDown}">
                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                <Setter Property="Margin" Value="5"/>
                                <Setter Property="Width" Value="{Binding iSize, Source={x:Static se:Settings.Default}, Converter={se:conv_Size}, ConverterParameter=10}"/>
                            </Style>
                            <Style TargetType="{x:Type se:ExtTextBox}">
                                <Setter Property="Margin" Value="5"/>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <DockPanel Grid.Column="0" Grid.ColumnSpan="3">
                            <!-- Module -->
                            <DockPanel DockPanel.Dock="Top">
                                <se:ExtLabel Content="Moduł:" FontWeight="Bold"/>
                                <ComboBox Margin="5" VerticalContentAlignment="Center"
                                          ItemsSource="{x:Static g:Config.ListModules}" DisplayMemberPath="Display" SelectedValuePath="Value"
                                          SelectedValue="{Binding InstanceData.Module}"/>
                            </DockPanel>
                            <!-- Name -->
                            <DockPanel DockPanel.Dock="Top">
                                <se:ExtLabel Content="Nazwa:" FontWeight="Bold"/>
                                <se:ExtTextBox Text="{Binding InstanceData.Name}"/>
                            </DockPanel>
                            <!-- Type -->
                            <DockPanel DockPanel.Dock="Top">
                                <se:ExtLabel Content="Typ:" FontWeight="Bold"/>
                                <ComboBox Margin="5" VerticalContentAlignment="Center"
                                          ItemsSource="{Binding Source={x:Static m:MS_AttributesClasses.Types}}" DisplayMemberPath="Display" SelectedValuePath="Value"
                                          SelectedValue="{Binding InstanceData.Type}"/>
                            </DockPanel>
                            <!-- IsRequired -->
                            <DockPanel DockPanel.Dock="Top">
                                <se:ExtLabel Content="Wymagane:" FontWeight="Normal"/>
                                <se:ExtCheckBox Margin="5" IsChecked="{Binding InstanceData.IsRequired}"/>
                            </DockPanel>
                            <!-- Values -->
                            <Label DockPanel.Dock="Top" Content="Lista możliwych wartości:" Margin="5,5,5,0" HorizontalAlignment="Center"/>
                            <se:ExtDataGrid Padding="5" ItemsSource="{Binding InstanceData.Values.DefaultView}"
											IsEnabled="{Binding InstanceData.Type, Converter={se:conv_Compare}, ConverterParameter=list}"
											IsReadOnly="{Binding EditMode, Converter={se:conv_Bool}, ConverterParameter=!}">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding id}" Header="ID" IsReadOnly="True" Visibility="Collapsed"/>
                                    <DataGridTextColumn Binding="{Binding value}" Header="Wartość" Width="*"/>
                                    <DataGridCheckBoxColumn Binding="{Binding archival}" Header="Archiwalna"/>
                                </DataGrid.Columns>
                                <DataGrid.RowStyle>
                                    <Style TargetType="DataGridRow">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Row.RowState}" Value="Added">
                                                <Setter Property="Background" Value="LightGreen"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Row.RowState}" Value="Modified">
                                                <Setter Property="Background" Value="LightYellow"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Row.RowState}" Value="Deleted">
                                                <Setter Property="Background" Value="LightPink"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding archival}" Value="True">
                                                <Setter Property="Foreground" Value="Gray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.RowStyle>
                            </se:ExtDataGrid>
                        </DockPanel>
                    </Grid>
                </ScrollViewer>
            </TabItem>
            <!-- tabAdditional -->
            <TabItem>
                <TabItem.Header>
                    <se:Header Text="{Tr Additional}" Icon="/Resources/icon32_tools.ico"/>
                </TabItem.Header>
                <s:AdditionalsTab/>
            </TabItem>
            <!-- tabGroups -->
            <TabItem>
                <TabItem.Header>
                    <se:Header Text="{Tr Groups}" Icon="/Resources/icon32_groups.ico"/>
                </TabItem.Header>
                <s:GroupsTab/>
            </TabItem>
            <!-- tabLogs -->
            <TabItem>
                <TabItem.Header>
                    <se:Header Text="{Tr History}" Icon="/Resources/icon32_history.ico"/>
                </TabItem.Header>
                <s:LogsTab/>
            </TabItem>
        </TabControl>
    </DockPanel>
</b:New>
